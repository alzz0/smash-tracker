{"version":3,"sources":["components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/profile/Profile.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","auth","firebase","withRouter","props","notifications","className","map","item","key","id","to","uid","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","dispatch","signOut","getState","getFirebase","then","type","onClick","history","push","profile","initial","SignedInLinks","isLoaded","SignedOutLinks","ownProps","match","params","data","goBack","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","useState","setUser","handleChange","e","target","value","onSubmit","preventDefault","console","log","htmlFor","onChange","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","firstName","lastName","createProject","authorId","add","Date","setProject","required","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","Profile","Boolean","window","location","hostname","initState","projectReducer","action","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3e5056e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nconst Notifications = (props, auth) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-content\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <Link\r\n                      to={`/profile/${props.auth.uid}`}\r\n                      className=\"pink-text\"\r\n                    >\r\n                      {item.user}{\" \"}\r\n                    </Link>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Notifications));\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nfunction ProjectSummary({ project }) {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary.js\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ProjectList({ projects }) {\r\n  return (\r\n    <div className=\"project-list seciton\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link key={project.id} to={`/project/${project.id}`}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport Notifications from \"./Notifications.js\";\r\nimport ProjectList from \"../projects/ProjectList.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nfunction Dashboard({ projects, auth, notifications }) {\r\n  return (\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects} />\r\n        </div>\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications notifications={notifications} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  projects: state.firestore.ordered.projects,\r\n  auth: state.firebase.auth,\r\n  notifications: state.firestore.ordered.notifications\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\",\r\n      orderBy: [\"createdAt\", \"desc\"]\r\n    },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React, { Profiler } from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nfunction SignedInLinks(props, auth) {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Post</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <span\r\n          to=\"/\"\r\n          className=\"btn btn-floating pink lighten-1\"\r\n          onClick={() => props.history.push(`/profile/${props.auth.uid}`)}\r\n        >\r\n          {props.profile.initial}\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signOut: () => dispatch(signOut())\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(SignedInLinks));\r\n","import { firestore } from \"firebase\";\r\n\r\nexport const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initial: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction SignedInLinks() {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nfunction Navbar({ auth, profile }) {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo left \">\r\n          SMASH\r\n        </Link>\r\n        {auth.isLoaded &&\r\n          (auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />)}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport moment from \"moment\";\r\nfunction ProjectDetails(props) {\r\n  const { project } = props;\r\n  const id = props.match.params.id;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n\r\n          <div className=\"card-action gray lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"waves-effect waves-light btn\"\r\n          onClick={() => props.history.goBack()}\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <p>loading ...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\"\r\n    }\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions.js\";\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction SignIn({ signIn, authError, auth }) {\r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n  function handleChange(e) {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    signIn(user);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input onChange={handleChange} type=\"email\" id=\"email\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input onChange={handleChange} type=\"password\" id=\"password\" />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authError: state.auth.authError,\r\n  auth: state.firebase.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions.js\";\r\nfunction SignUp({ auth, authError, signUp }) {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  });\r\n\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n  function handleChange(e) {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    signUp(user);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input onChange={handleChange} type=\"email\" id=\"email\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input onChange={handleChange} type=\"password\" id=\"password\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input onChange={handleChange} type=\"text\" id=\"firstName\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input onChange={handleChange} type=\"text\" id=\"lastName\" />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  authError: state.auth.authError\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport { createProject } from \"../../store/actions/projectActions.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction CreateProject({ createProject, auth, history }) {\r\n  const [project, setProject] = useState({ title: \"\", content: \"\" });\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  function handleChange(e) {\r\n    setProject({ ...project, [e.target.id]: e.target.value });\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    createProject(project);\r\n    setProject({ title: \"\", content: \"\" });\r\n\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">New Post</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            required\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={project.title}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">Project Content</label>\r\n          <textarea\r\n            required\r\n            value={project.content}\r\n            onChange={handleChange}\r\n            id=\"content\"\r\n            className=\"materialize-textarea\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to db\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nfunction Profile({ profile }) {\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Name: {profile.firstName} {profile.lastName}\r\n      </h3>\r\n      <h4>Points: ...</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.firebase.profile\r\n});\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Dashboard from \"./components/dashboard/Dashboard.js\";\nimport Navbar from \"./components/layout/Navbar.js\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn.js\";\nimport SignUp from \"./components/auth/SignUp.js\";\nimport CreateProject from \"./components/projects/CreateProject.js\";\nimport Profile from \"./components/profile/Profile.js\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n          <Route path=\"/profile/:id\" component={Profile} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"title1\", content: \"content1\" },\r\n    { id: \"2\", title: \"title2\", content: \"content2\" },\r\n    { id: \"3\", title: \"title3\", content: \"content3\" }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"Create project error\", action.err);\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","const initState = {\r\n  authError: null\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login Failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"sucess\");\r\n\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import projectReducer from \"./projectReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD1kYJyvdacDftjLth0b9gRha-1h6R6wlI\",\r\n  authDomain: \"smashbros-fa91c.firebaseapp.com\",\r\n  databaseURL: \"https://smashbros-fa91c.firebaseio.com\",\r\n  projectId: \"smashbros-fa91c\",\r\n  storageBucket: \"smashbros-fa91c.appspot.com\",\r\n  messagingSenderId: \"434722815657\",\r\n  appId: \"1:434722815657:web:87623cf1061653c038b3b8\",\r\n  measurementId: \"G-9G452HN5WT\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}