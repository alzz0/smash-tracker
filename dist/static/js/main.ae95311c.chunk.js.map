{"version":3,"sources":["components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Notifications","props","notifications","className","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","to","compose","connect","state","firestore","ordered","auth","firebase","firestoreConnect","collection","orderBy","limit","uid","dispatch","signOut","getState","getFirebase","then","type","onClick","profile","initial","SignedInLinks","console","log","isLoaded","SignedOutLinks","ownProps","match","params","data","history","goBack","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","useState","setUser","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","onChange","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","firstName","lastName","createProject","authorId","add","Date","setProject","push","required","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","Boolean","window","location","hostname","initState","projectReducer","action","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ae95311c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-content\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\"> {item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nfunction ProjectSummary({ project }) {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary.js\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ProjectList({ projects }) {\r\n  return (\r\n    <div className=\"project-list seciton\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link key={project.id} to={`/project/${project.id}`}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport Notifications from \"./Notifications.js\";\r\nimport ProjectList from \"../projects/ProjectList.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction Dashboard({ projects, auth, notifications }) {\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  return (\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects} />\r\n        </div>\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications notifications={notifications} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  projects: state.firestore.ordered.projects,\r\n  auth: state.firebase.auth,\r\n  notifications: state.firestore.ordered.notifications\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\",\r\n      orderBy: [\"createdAt\", \"desc\"]\r\n    },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React, { Profiler } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nfunction SignedInLinks(props) {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initial}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signOut: () => dispatch(signOut())\r\n});\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","import { firestore } from \"firebase\";\r\n\r\nexport const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initial: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction SignedInLinks() {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nfunction Navbar({ auth, profile }) {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          smashbros\r\n        </Link>\r\n        {auth.isLoaded &&\r\n          (auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />)}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport moment from \"moment\";\r\nfunction ProjectDetails(props) {\r\n  const { project } = props;\r\n  const id = props.match.params.id;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n\r\n          <div className=\"card-action gray lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n        <button onClick={() => props.history.goBack()}>Back</button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <p>loading ...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\"\r\n    }\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions.js\";\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction SignIn({ signIn, authError, auth }) {\r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n  function handleChange(e) {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    signIn(user);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input onChange={handleChange} type=\"email\" id=\"email\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input onChange={handleChange} type=\"password\" id=\"password\" />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authError: state.auth.authError,\r\n  auth: state.firebase.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions.js\";\r\nfunction SignUp({ auth, authError, signUp }) {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  });\r\n\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n  function handleChange(e) {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    signUp(user);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input onChange={handleChange} type=\"email\" id=\"email\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input onChange={handleChange} type=\"password\" id=\"password\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input onChange={handleChange} type=\"text\" id=\"firstName\" />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input onChange={handleChange} type=\"text\" id=\"lastName\" />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  authError: state.auth.authError\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport { createProject } from \"../../store/actions/projectActions.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction CreateProject({ createProject, auth, history }) {\r\n  const [project, setProject] = useState({ title: \"\", content: \"\" });\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  function handleChange(e) {\r\n    setProject({ ...project, [e.target.id]: e.target.value });\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    createProject(project);\r\n    setProject({ title: \"\", content: \"\" });\r\n\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">New Project</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            required\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={project.title}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">Project Content</label>\r\n          <textarea\r\n            required\r\n            value={project.content}\r\n            onChange={handleChange}\r\n            id=\"content\"\r\n            className=\"materialize-textarea\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to db\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Dashboard from \"./components/dashboard/Dashboard.js\";\nimport Navbar from \"./components/layout/Navbar.js\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn.js\";\nimport SignUp from \"./components/auth/SignUp.js\";\nimport CreateProject from \"./components/projects/CreateProject.js\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"title1\", content: \"content1\" },\r\n    { id: \"2\", title: \"title2\", content: \"content2\" },\r\n    { id: \"3\", title: \"title3\", content: \"content3\" }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"Create project error\", action.err);\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","const initState = {\r\n  authError: null\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login Failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"sucess\");\r\n\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import projectReducer from \"./projectReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD1kYJyvdacDftjLth0b9gRha-1h6R6wlI\",\r\n  authDomain: \"smashbros-fa91c.firebaseapp.com\",\r\n  databaseURL: \"https://smashbros-fa91c.firebaseio.com\",\r\n  projectId: \"smashbros-fa91c\",\r\n  storageBucket: \"smashbros-fa91c.appspot.com\",\r\n  messagingSenderId: \"434722815657\",\r\n  appId: \"1:434722815657:web:87623cf1061653c038b3b8\",\r\n  measurementId: \"G-9G452HN5WT\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}